{
  "uid" : "79f2e087fa9ba654",
  "name" : "test_post_create_reward",
  "fullName" : "tests.test_api_rewards#test_post_create_reward",
  "historyId" : "fd40d81c9478f9bceb334bc4b86a5579",
  "time" : {
    "start" : 1699686324131,
    "stop" : 1699686334148,
    "duration" : 10017
  },
  "status" : "failed",
  "statusMessage" : "Failed: Timeout >10.0s",
  "statusTrace" : "api_url = 'https://api.dev.nerdunited.net/rewards'\nauth_token = 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImQ0OWU0N2ZiZGQ0ZWUyNDE0Nzk2ZDhlMDhjZWY2YjU1ZDA3MDRlNGQiLCJ0eXAiOiJKV1QifQ.eyJhZ3JlZW1lbn...8Tw9WsRV5_n-UrX76GsYNogYrhh8sIT46uC6yumx7AgvWKiBkO6BzoOnlD2R6M6qXdNXt9-6gd5r39WtIQjDtAMQOXtgVFFFCA3qhZy-9zGyAxr1fTusQg'\n\n    def test_post_create_reward(api_url, auth_token):\n        global campaign_id\n        global promotion_id\n        global reward_id\n        url = f\"{api_url}/v1/campaigns/{campaign_id}/promotions/{promotion_id}/rewards\"\n        data = ({\n        \"RewardType\": 1,\n        \"Amount\": 1})\n        headers = {\"Authorization\": f\"Bearer {auth_token}\"}\n>       response = requests.post(url=url, headers=headers, json=data)\n\ntests/test_api_rewards.py:137: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/lib/python3/dist-packages/requests/api.py:119: in post\n    return request('post', url, data=data, json=json, **kwargs)\n/usr/lib/python3/dist-packages/requests/api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:544: in request\n    resp = self.send(prep, **send_kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:657: in send\n    r = adapter.send(request, **kwargs)\n/usr/lib/python3/dist-packages/requests/adapters.py:439: in send\n    resp = conn.urlopen(\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:699: in urlopen\n    httplib_response = self._make_request(\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:382: in _make_request\n    self._validate_conn(conn)\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:1012: in _validate_conn\n    conn.connect()\n/usr/lib/python3/dist-packages/urllib3/connection.py:353: in connect\n    conn = self._new_conn()\n/usr/lib/python3/dist-packages/urllib3/connection.py:169: in _new_conn\n    conn = connection.create_connection(\n/usr/lib/python3/dist-packages/urllib3/util/connection.py:73: in create_connection\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhost = 'api.dev.nerdunited.net', port = 443\nfamily = <AddressFamily.AF_UNSPEC: 0>, type = <SocketKind.SOCK_STREAM: 1>\nproto = 0, flags = 0\n\n    def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0):\n        \"\"\"Resolve host and port into list of address info entries.\n    \n        Translate the host/port argument into a sequence of 5-tuples that contain\n        all the necessary arguments for creating a socket connected to that service.\n        host is a domain name, a string representation of an IPv4/v6 address or\n        None. port is a string service name such as 'http', a numeric port number or\n        None. By passing None as the value of host and port, you can pass NULL to\n        the underlying C API.\n    \n        The family, type and proto arguments can be optionally specified in order to\n        narrow the list of addresses returned. Passing zero as a value for each of\n        these arguments selects the full range of results.\n        \"\"\"\n        # We override this function since we want to translate the numeric family\n        # and socket type values to enum constants.\n        addrlist = []\n>       for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE       Failed: Timeout >10.0s\n\n/usr/lib/python3.10/socket.py:955: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_url",
    "time" : {
      "start" : 1699686319276,
      "stop" : 1699686319276,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1699686319276,
      "stop" : 1699686319276,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1699686319276,
      "stop" : 1699686319276,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_token",
    "time" : {
      "start" : 1699686319276,
      "stop" : 1699686320174,
      "duration" : 898
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_version",
    "time" : {
      "start" : 1699686319276,
      "stop" : 1699686319276,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1699686319276,
      "stop" : 1699686319276,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_api_rewards"
  }, {
    "name" : "host",
    "value" : "fv-az171-656"
  }, {
    "name" : "thread",
    "value" : "1764-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api_rewards"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "79f2e087fa9ba654.json",
  "parameterValues" : [ ]
}