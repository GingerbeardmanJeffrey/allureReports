{
  "uid" : "12c66d4151a4df11",
  "name" : "test_negative_create_invoice_invalid_product",
  "fullName" : "tests.test_api_invoices#test_negative_create_invoice_invalid_product",
  "historyId" : "b3fbd147a20770c80b91ce84f5905375",
  "time" : {
    "start" : 1697958277529,
    "stop" : 1697958278211,
    "duration" : 682
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Negative test failed: Received incorrect status code (500)",
  "statusTrace" : "expected_status_code = [404], response = <Response [500]>\ntest_name = 'test_negative_create_invoice_invalid_product'\n\n    def negative_test(expected_status_code, response, test_name):\n        logging.info(f\"=== Starting {test_name} Test (Negative) ===\")\n        logging.info(f\"API Response: {response.status_code} | {response.text}\")\n    \n        try:\n>           assert response.status_code in expected_status_code, f\"API response status code: {response.status_code}\"\nE           AssertionError: API response status code: 500\nE           assert 500 in [404]\nE            +  where 500 = <Response [500]>.status_code\n\nconftest.py:212: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\napi_url = 'https://api.dev.nerdunited.net/shopping/api'\nauth_token = 'eyJhbGciOiJSUzI1NiIsImtpZCI6IjAzZDA3YmJjM2Q3NWM2OTQyNzUxMGY2MTc0ZWIyZjE2NTQ3ZDRhN2QiLCJ0eXAiOiJKV1QifQ.eyJhZ3JlZW1lbn...Q2sYGranmB8m26-792wzwhhS8AzwuqxCTCvaJYtZXBHAJ71e1qEgkg6uyxk7Ea691Dt7JsVhy-2y2aU3rwhIRh6ndpf_CwQB0b1LvxH6bJsP5r4kMY8hXA'\nmember_id = 3829\n\n    def test_negative_create_invoice_invalid_product(api_url, auth_token, member_id):\n        global invoice_id\n        url = f\"{api_url}/invoices\"\n        data = {\"memberId\": member_id, \"paymentMethod\": 1, \"products\":\n                [{\"productId\": 100, \"quantity\": 1}]}\n        headers = {\"Authorization\": f\"Bearer {auth_token}\"}\n        response = requests.post(url=url, headers=headers, json=data)\n        negative_error_assertion(response)\n>       api_response_conditions_negative_404(response)\n\ntests/test_api_invoices.py:157: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:248: in api_response_conditions_negative_404\n    negative_test(expected_status_code, response, test_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected_status_code = [404], response = <Response [500]>\ntest_name = 'test_negative_create_invoice_invalid_product'\n\n    def negative_test(expected_status_code, response, test_name):\n        logging.info(f\"=== Starting {test_name} Test (Negative) ===\")\n        logging.info(f\"API Response: {response.status_code} | {response.text}\")\n    \n        try:\n            assert response.status_code in expected_status_code, f\"API response status code: {response.status_code}\"\n        except AssertionError as e:\n            logging.info(f\"Test '{test_name}' (Negative) FAILED.\")\n            logging.exception(e)  # Capture the exception along with its traceback\n>           raise AssertionError(f\"Negative test failed: Received incorrect status code ({response.status_code})\")\nE           AssertionError: Negative test failed: Received incorrect status code (500)\n\nconftest.py:216: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_url",
    "time" : {
      "start" : 1697958273031,
      "stop" : 1697958273031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1697958273031,
      "stop" : 1697958273031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_version",
    "time" : {
      "start" : 1697958273031,
      "stop" : 1697958273031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1697958273031,
      "stop" : 1697958273031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_token",
    "time" : {
      "start" : 1697958273031,
      "stop" : 1697958273911,
      "duration" : 880
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1697958273031,
      "stop" : 1697958273031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "member_id",
    "time" : {
      "start" : 1697958277528,
      "stop" : 1697958277528,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Negative test failed: Received incorrect status code (500)",
    "statusTrace" : "expected_status_code = [404], response = <Response [500]>\ntest_name = 'test_negative_create_invoice_invalid_product'\n\n    def negative_test(expected_status_code, response, test_name):\n        logging.info(f\"=== Starting {test_name} Test (Negative) ===\")\n        logging.info(f\"API Response: {response.status_code} | {response.text}\")\n    \n        try:\n>           assert response.status_code in expected_status_code, f\"API response status code: {response.status_code}\"\nE           AssertionError: API response status code: 500\nE           assert 500 in [404]\nE            +  where 500 = <Response [500]>.status_code\n\nconftest.py:212: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\napi_url = 'https://api.dev.nerdunited.net/shopping/api'\nauth_token = 'eyJhbGciOiJSUzI1NiIsImtpZCI6IjAzZDA3YmJjM2Q3NWM2OTQyNzUxMGY2MTc0ZWIyZjE2NTQ3ZDRhN2QiLCJ0eXAiOiJKV1QifQ.eyJhZ3JlZW1lbn...Q2sYGranmB8m26-792wzwhhS8AzwuqxCTCvaJYtZXBHAJ71e1qEgkg6uyxk7Ea691Dt7JsVhy-2y2aU3rwhIRh6ndpf_CwQB0b1LvxH6bJsP5r4kMY8hXA'\nmember_id = 3829\n\n    def test_negative_create_invoice_invalid_product(api_url, auth_token, member_id):\n        global invoice_id\n        url = f\"{api_url}/invoices\"\n        data = {\"memberId\": member_id, \"paymentMethod\": 1, \"products\":\n                [{\"productId\": 100, \"quantity\": 1}]}\n        headers = {\"Authorization\": f\"Bearer {auth_token}\"}\n        response = requests.post(url=url, headers=headers, json=data)\n        negative_error_assertion(response)\n>       api_response_conditions_negative_404(response)\n\ntests/test_api_invoices.py:157: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:248: in api_response_conditions_negative_404\n    negative_test(expected_status_code, response, test_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected_status_code = [404], response = <Response [500]>\ntest_name = 'test_negative_create_invoice_invalid_product'\n\n    def negative_test(expected_status_code, response, test_name):\n        logging.info(f\"=== Starting {test_name} Test (Negative) ===\")\n        logging.info(f\"API Response: {response.status_code} | {response.text}\")\n    \n        try:\n            assert response.status_code in expected_status_code, f\"API response status code: {response.status_code}\"\n        except AssertionError as e:\n            logging.info(f\"Test '{test_name}' (Negative) FAILED.\")\n            logging.exception(e)  # Capture the exception along with its traceback\n>           raise AssertionError(f\"Negative test failed: Received incorrect status code ({response.status_code})\")\nE           AssertionError: Negative test failed: Received incorrect status code (500)\n\nconftest.py:216: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bbf75c71f5bda157",
      "name" : "log",
      "source" : "bbf75c71f5bda157.txt",
      "type" : "text/plain",
      "size" : 8809
    }, {
      "uid" : "46403e58f0ed90b9",
      "name" : "stdout",
      "source" : "46403e58f0ed90b9.txt",
      "type" : "text/plain",
      "size" : 7749
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_api_invoices"
  }, {
    "name" : "host",
    "value" : "fv-az646-5"
  }, {
    "name" : "thread",
    "value" : "1757-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api_invoices"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "12c66d4151a4df11.json",
  "parameterValues" : [ ]
}