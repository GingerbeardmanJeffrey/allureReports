INFO     root:conftest.py:165 === Starting auth_token Test ===
INFO     root:conftest.py:166 API Response: 200 | {"kind":"identitytoolkit#VerifyCustomTokenResponse","idToken":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjE5MGFkMTE4YTk0MGFkYzlmMmY1Mzc2YjM1MjkyZmVkZThjMmQwZWUiLCJ0eXAiOiJKV1QifQ.eyJhZ3JlZW1lbnRzU2lnbmVkIjp0cnVlLCJlbWFpbFZlcmlmaWVkIjp0cnVlLCJtZW1iZXJCaXJ0aERhdGUiOiIwMy8wOC8xOTkxIDAwOjAwOjAwIiwibWVtYmVySWQiOjM4MjksIm1lbWJlckZpcnN0TmFtZSI6IlFBIiwibWVtYmVyTGFzdE5hbWUiOiJOZXJkIiwibWVtYmVyRGlzcGxheU5hbWUiOiJOZXJkQ29yZS1RQSIsIm1lbWJlck5hbWUiOiJOZXJkIENvcmUiLCJtZW1iZXJOdW1iZXIiOiIwMDM4MjkiLCJtZW1iZXJQaG9uZSI6IisxMzEwNTU1NTU1NSIsIm1lbWJlclRpbWVab25lIjoiKzA3OjAwIiwicGVybWlzc2lvbnMiOlsibWVtYmVyc2hpcC5wZXJtaXNzaW9ucy52aWV3IiwibWVtYmVyc2hpcC5yb2xlcy5jcmVhdGUiLCJtZW1iZXJzaGlwLnJvbGVzLnZpZXciLCJtZW1iZXJzaGlwLnJvbGVzLnVwZGF0ZSIsIm1lbWJlcnNoaXAucm9sZXMuZGVsZXRlIiwic2hvcHBpbmcucHJvZHVjdHMuY3JlYXRlIiwic2hvcHBpbmcucHJvZHVjdHMudmlldyIsInNob3BwaW5nLnByb2R1Y3RzLnVwZGF0ZSIsInNob3BwaW5nLnByb2R1Y3RzLmRlbGV0ZSIsInNob3BwaW5nLnByb2R1Y3RzLnByaWNldGllcnMuY3JlYXRlIiwic2hvcHBpbmcucHJvZHVjdHMucHJpY2V0aWVycy52aWV3Iiwic2hvcHBpbmcucHJvZHVjdHMucHJpY2V0aWVycy51cGRhdGUiLCJzaG9wcGluZy5wcm9kdWN0cy5wcmljZXRpZXJzLmRlbGV0ZSIsIm1lbWJlcnNoaXAuYWdyZWVtZW50cy5jcmVhdGUiLCJtZW1iZXJzaGlwLmFncmVlbWVudHMudmlldyIsIm1lbWJlcnNoaXAuYWdyZWVtZW50cy51cGRhdGUiLCJtZW1iZXJzaGlwLmFncmVlbWVudHMuZGVsZXRlIiwibWVtYmVyc2hpcC5hZmZpbGlhdGVzLmNyZWF0ZSIsIm1lbWJlcnNoaXAuYWZmaWxpYXRlcy52aWV3IiwibWVtYmVyc2hpcC5hZmZpbGlhdGVzLnVwZGF0ZSIsIm1lbWJlcnNoaXAuYWZmaWxpYXRlcy5kZWxldGUiLCJtZW1iZXJzaGlwLm1lbWJlcnJvbGVzLnVwZGF0ZSIsIm1lbWJlcnNoaXAubWVtYmVycm9sZXMudmlldyIsIm1lbWJlcnNoaXAubWVtYmVycm9sZXMuY3JlYXRlIiwibWVtYmVyc2hpcC5tZW1iZXJyb2xlcy5kZWxldGUiLCJhZG1pbi5zeXN0ZW0uc2V0dGluZ3MubWFuYWdlIiwiYWRtaW4uZGFzaGJvYXJkLnZpZXciLCJzdXBwb3J0LmRhc2hib2FyZC52aWV3IiwiYWRtaW4uZGFzaGJvYXJkLnN0YXRzLm51bWJlcnMudmlldyIsImFkbWluLmRhc2hib2FyZC5zdGF0cy5wcm9maXQudmlldyIsImFkbWluLnN5c3RlbS5ub3RpZmljYXRpb25zLnZpZXciLCJhZG1pbi5zeXN0ZW0ubm90aWZpY2F0aW9ucy5jcmVhdGUiLCJhZG1pbi5zeXN0ZW0ubm90aWZpY2F0aW9ucy51cGRhdGUiLCJhZG1pbi5zeXN0ZW0ubm90aWZpY2F0aW9ucy5kZWxldGUiLCJtZXNzYWdpbmcuZW1haWx0ZW1wbGF0ZXMudmlldyIsIm1lc3NhZ2luZy5lbWFpbHRlbXBsYXRlcy5jcmVhdGUiLCJtZXNzYWdpbmcuZW1haWx0ZW1wbGF0ZXMudXBkYXRlIiwibWVzc2FnaW5nLmVtYWlsdGVtcGxhdGVzLmRlbGV0ZSIsInN1cHBvcnQubG9ndHlwZXMudmlldyIsInN1cHBvcnQubG9ndHlwZXMuY3JlYXRlIiwic3VwcG9ydC5sb2d0eXBlcy51cGRhdGUiLCJzdXBwb3J0LmxvZ3R5cGVzLmRlbGV0ZSIsInN1cHBvcnQubWVtYmVycy5zZWFyY2hyZWNvcmRzLnZpZXciLCJzdXBwb3J0Lm1lbWJlcnMuc2VhcmNocmVjb3Jkcy5jcmVhdGUiLCJzdXBwb3J0Lm1lbWJlcnMuc2VhcmNocmVjb3Jkcy51cGRhdGUiLCJzdXBwb3J0Lm1lbWJlcnMuc2VhcmNocmVjb3Jkcy5kZWxldGUiLCJzdXBwb3J0LnN5c3RlbS5mYXZvcml0ZWdyb3Vwcy52aWV3Iiwic3VwcG9ydC5zeXN0ZW0uZmF2b3JpdGVncm91cHMuY3JlYXRlIiwic3VwcG9ydC5zeXN0ZW0uZmF2b3JpdGVncm91cHMudXBkYXRlIiwic3VwcG9ydC5zeXN0ZW0uZmF2b3JpdGVncm91cHMuZGVsZXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLnZpZXciLCJtZW1iZXJzaGlwLm1lbWJlcnMuY3JlYXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLnVwZGF0ZSIsIm1lbWJlcnNoaXAubWVtYmVycy5kZWxldGUiLCJtZW1iZXJzaGlwLm1lbWJlcnMuc2VhcmNoIiwibWVtYmVyc2hpcC5tZW1iZXJzLnNlYXJjaC5iYXNpYyIsIm1lbWJlcnNoaXAubWVtYmVycy5zZWFyY2guYWR2YW5jZWQiLCJtZW1iZXJzaGlwLm1lbWJlcnMuc3BvbnNvci52aWV3IiwibWVtYmVyc2hpcC5tZW1iZXJzLnNwb25zb3IuY3JlYXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLnNwb25zb3IudXBkYXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLnNwb25zb3IuZGVsZXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLmFncmVlbWVudHMudmlldyIsIm1lbWJlcnNoaXAubWVtYmVycy5hZ3JlZW1lbnRzLmNyZWF0ZSIsIm1lbWJlcnNoaXAubWVtYmVycy5hZ3JlZW1lbnRzLnVwZGF0ZSIsIm1lbWJlcnNoaXAubWVtYmVycy5hZ3JlZW1lbnRzLmRlbGV0ZSIsInNob3BwaW5nLm1lbWJlcnMudHJhbnNhY3Rpb25zLnZpZXciLCJzaG9wcGluZy5tZW1iZXJzLnRyYW5zYWN0aW9ucy5jcmVhdGUiLCJzaG9wcGluZy5tZW1iZXJzLnRyYW5zYWN0aW9ucy51cGRhdGUiLCJzaG9wcGluZy5tZW1iZXJzLnRyYW5zYWN0aW9ucy5kZWxldGUiLCJzaG9wcGluZy5tZW1iZXJzLnRyYW5zYWN0aW9ucy5zdGF0dXMudXBkYXRlIiwibGljZW5zZXMubWVtYmVycy5saWNlbnNlcy52aWV3IiwibGljZW5zZXMubWVtYmVycy5saWNlbnNlcy5jcmVhdGUiLCJsaWNlbnNlcy5tZW1iZXJzLmxpY2Vuc2VzLnVwZGF0ZSIsImxpY2Vuc2VzLm1lbWJlcnMubGljZW5zZXMuZGVsZXRlIiwid2FsbGV0Lm1lbWJlcnMuYWN0aXZlbm9kZXMudmlldyIsIndhbGxldC5tZW1iZXJzLmFjdGl2ZW5vZGVzLmNvdW50LnZpZXciLCJ3YWxsZXQubWVtYmVycy5yZXdhcmRzLnZpZXciLCJ3YWxsZXQubWVtYmVycy5yZXdhcmRzLmNyZWF0ZSIsIndhbGxldC5tZW1iZXJzLnJld2FyZHMudXBkYXRlIiwid2FsbGV0Lm1lbWJlcnMucmV3YXJkcy5kZWxldGUiLCJzdXBwb3J0Lm1lbWJlcnMubG9ncy52aWV3Iiwic3VwcG9ydC5tZW1iZXJzLmxvZ3MuY3JlYXRlIiwic3VwcG9ydC5tZW1iZXJzLmxvZ3MudXBkYXRlIiwic3VwcG9ydC5tZW1iZXJzLmxvZ3MuZGVsZXRlIiwic3VwcG9ydC5tZW1iZXJzLmxvZ3MubWRiLm1hbmFnZSIsInN1cHBvcnQubWVtYmVycy5sb2dzLndwLm1hbmFnZSIsInN1cHBvcnQubWVtYmVycy5ub3Rlcy52aWV3Iiwic3VwcG9ydC5tZW1iZXJzLm5vdGVzLmNyZWF0ZSIsInN1cHBvcnQubWVtYmVycy5ub3Rlcy51cGRhdGUiLCJzdXBwb3J0Lm1lbWJlcnMubm90ZXMuZGVsZXRlIiwic3VwcG9ydC5tZW1iZXJzLmZhdm9yaXRlZ3JvdXBzLnBlcnNvbmFsLnZpZXciLCJzdXBwb3J0Lm1lbWJlcnMuZmF2b3JpdGVncm91cHMucGVyc29uYWwuY3JlYXRlIiwic3VwcG9ydC5tZW1iZXJzLmZhdm9yaXRlZ3JvdXBzLnBlcnNvbmFsLnVwZGF0ZSIsInN1cHBvcnQubWVtYmVycy5mYXZvcml0ZWdyb3Vwcy5wZXJzb25hbC5kZWxldGUiLCJzdXBwb3J0Lm1lbWJlcnMuZmF2b3JpdGVzLnBlcnNvbmFsLnZpZXciLCJzdXBwb3J0Lm1lbWJlcnMuZmF2b3JpdGVzLnBlcnNvbmFsLmNyZWF0ZSIsInN1cHBvcnQubWVtYmVycy5mYXZvcml0ZXMucGVyc29uYWwudXBkYXRlIiwic3VwcG9ydC5tZW1iZXJzLmZhdm9yaXRlcy5wZXJzb25hbC5kZWxldGUiLCJzdXBwb3J0LnplbmRlc2sucmVjb3Jkcy52aWV3Iiwic3VwcG9ydC56ZW5kZXNrLnJlY29yZHMuY3JlYXRlIiwic3VwcG9ydC56ZW5kZXNrLnJlY29yZHMudXBkYXRlIiwic3VwcG9ydC56ZW5kZXNrLnJlY29yZHMuZGVsZXRlIiwic3VwcG9ydC5qaXJhLnJlY29yZHMudmlldyIsInN1cHBvcnQuamlyYS5yZWNvcmRzLmNyZWF0ZSIsInN1cHBvcnQuamlyYS5yZWNvcmRzLnVwZGF0ZSIsInN1cHBvcnQuamlyYS5yZWNvcmRzLmRlbGV0ZSIsInN1cHBvcnQuc2FsZXNmb3JjZS5yZWNvcmRzLnZpZXciLCJzdXBwb3J0LnNhbGVzZm9yY2UucmVjb3Jkcy5jcmVhdGUiLCJzdXBwb3J0LnNhbGVzZm9yY2UucmVjb3Jkcy51cGRhdGUiLCJzdXBwb3J0LnNhbGVzZm9yY2UucmVjb3Jkcy5kZWxldGUiLCJtZW1iZXJzaGlwLm1lbWJlcnMucGFzc3dvcmQucmVzZXQiLCJtZW1iZXJzaGlwLm1lbWJlcnMuZW1haWwudXBkYXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLjJmYS5yZW1vdmUiLCJtZW1iZXJzaGlwLm1lbWJlcnMuMmZhLmNyZWF0ZSIsIndhbGxldC5tZW1iZXJzLndhbGxldHMudmlldyIsIndhbGxldC5tZW1iZXJzLndhbGxldHMuY3JlYXRlIiwid2FsbGV0Lm1lbWJlcnMud2FsbGV0cy51cGRhdGUiLCJ3YWxsZXQubWVtYmVycy53YWxsZXRzLnJlY292ZXIiLCJ3YWxsZXQubWVtYmVycy53YWxsZXRzLmFyY2hpdmUiLCJtZW1iZXJzaGlwLnBlcm1pc3Npb25zLnBvcHVsYXRlLmRlZmF1bHRzIiwibWVtYmVyc2hpcC5yb2xlcy5wb3B1bGF0ZS5kZWZhdWx0cyIsIm1lbWJlcnNoaXAucm9sZXBlcm1pc3Npb25zLnBvcHVsYXRlLmRlZmF1bHRzIiwibWVtYmVyc2hpcC5tZW1iZXJzLmNvbW1pc3Npb24ucmVwb3J0IiwibWVtYmVyc2hpcC5tZW1iZXJzLmluZmx1ZW5jZXIucmVwb3J0IiwibWVtYmVyc2hpcC5tZW1iZXJzLmFkbWluLnZpZXciLCJtZW1iZXJzaGlwLm1lbWJlcnMuYWRtaW4uY3JlYXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLmFkbWluLnVwZGF0ZSIsIm1lbWJlcnNoaXAubWVtYmVycy5hZG1pbi5kZWxldGUiLCJtZW1iZXJzaGlwLm1lbWJlcnMuZmlyZWJhc2UubG9jay51cGRhdGUiLCJtZW1iZXJzaGlwLm1lbWJlcnMuZmlyZWJhc2UubG9jay52aWV3Iiwic2hvcHBpbmcuaW52b2ljZXMudmlldyIsIndhbGxldC5lcmMyMHRva2Vucy52aWV3Iiwid2FsbGV0LmVyYzIwdG9rZW5zLnVwZGF0ZSIsIm1lbWJlcnNoaXAucGVybWlzc2lvbnMuY3JlYXRlIiwic2hvcHBpbmcuaW52b2ljZXMudXBkYXRlIiwibWVtYmVyc2hpcC5tZW1iZXJzLnZpZXdkIiwiRmVhdHVyZUZsYWdzLkNyZWF0ZSIsIkZlYXR1cmVGbGFncy5VcGRhdGUiXSwicm9sZXMiOlsiU3VwZXIgQWRtaW4iXSwidXNlcklkIjoiNjQyZWVmYTY3NWRlNzA3YzQ0YWZjODQwIiwib3B0SW5TaGFyZU5hbWUiOmZhbHNlLCJhdXRoZW50aWNhdG9yRW5hYmxlZCI6ZmFsc2UsImlzcyI6Imh0dHBzOi8vc2VjdXJldG9rZW4uZ29vZ2xlLmNvbS9jb3JlLWRldi05YjU0YiIsImF1ZCI6ImNvcmUtZGV2LTliNTRiIiwiYXV0aF90aW1lIjoxNjk0MDIyNzQyLCJ1c2VyX2lkIjoib0NEUmxzTTlTM1o3YnowVzczMmJQVHFpRlFIMyIsInN1YiI6Im9DRFJsc005UzNaN2J6MFc3MzJiUFRxaUZRSDMiLCJpYXQiOjE2OTQwMjI3NDIsImV4cCI6MTY5NDAyNjM0MiwiZW1haWwiOiJuZXJkY29yZV9xYXRlYW0rMUBuZXJkdW5pdGVkLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7ImVtYWlsIjpbIm5lcmRjb3JlX3FhdGVhbSsxQG5lcmR1bml0ZWQuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoiY3VzdG9tIn19.jj9GTC_fU0vDc945eIOenKvBJ1djjdPxs9BImGII_ssGyNeTF7SLb3d-qyl8RtN5alTtwJX5EU5mcurDvQOl8nAXUvPjsjoIKmUMhcidwVOEarpMWXeOJVqxrd1alfPO_3QUY6G_1RY8gefzMBjNFwOnJVquUK0h940Ul2rFwg1UAQRHMI_l8xzV4kDfZR8k9rBKwc8goUqI1W-qLiFvBqWLX5zboCsER6cCROaFum1t6zfFPuE1Yuw4d1XLMKx-UHPh7Y951dx-DpSSkfu3Yrwat8UDHDZzn-ufHDvcUi5obQMWq5qXRPJvr_sSigvRUgpUN2N9kpLRv8UKfOC_Lw","refreshToken":"AMf-vBzRD48jbaRy3zWCBNL7FP4tJe-nyQxhvC_59y6LVToQNaF3LYcMRtdhKslDX1k_ApvwQp9liVJ7TuvMd_GaDHAAlmDdR-erKPSvNV0YczeXltxRawsiUdEYGK7IfCtJJlHlqIhVCr7FEj0VXdCP5vzF_kDsIsz-TUJCieVHU0z0M-G72aQ1Vg9Jg_loUNssDhjpkqCHygDtDEYMK_qSWmJFTAtWV3BHoLj1wODsm3D2iuuZ3oWmchC7y-lIpxqoz1nVB-hVmn4Pb-4ZFBxkO86Ud5B-DencryeuJk2MjQRgg2L7kWAXcEua-h52JbTkjzFqmST1Q_-6mMtlyIhPEp7EvZohZTl2Lpk2zk4zbC7pr-KKjhX_maxlyh712j-0BVYPt-oOPmHDWFg-ojXrKj_2NU1Klvi0PVJDR4hFeLrjO2cLjLxGwV_LrfSn4EHVhO3oZ3u2hqSiif_P3D4Wz-LjcPiuvIczCQkeNw0AWOSF-ihdNcg4eRnNUOW12d1iESzOoo43_cGtVwpqYZJKXyc9VkIdlrDLL54DxMoCEzzr_xh3T2x00GWzYTS0j9SFwsT7e_UTHhq_3scNfNRk43J8eiq8tJlvOzT83JJds3VYExPh8nAF4eZaDBDi7RUrPmFPBb-xK1uZZnaJ41T-EH_UeJdwehseAJXxA8m14XRaPeK5rHabiP4TP0SOSnR95_E_0RqmE3PGWOJ9tm-5Aagi8L395vo0pfah8jCtSvLJf8RPxs7HFsT0RhCAiWaLcQGeDPtqg69UYZFHOqZrWSBxzHfNffeFlcgDHPUOIHV0otrFuRQZi_XyUrSz1RjwW48pHIMC0FrXUVvZV107BtOsiQp6gE9z1o99bDu2KYwjkgJvGcqxf5pqZVvIymFhudJhXLM3uSdJ-0T0WjGuXluxVnDAlIWxsh-vg9NCIIJF62gQ2yYCBXtV-3Pko6jhF2ILJPjcaAiIwFYBlTmbvzxiHUpFxcfRc0tcbYUzrpb2EpnNDJHlfHepJlLJMo6wMF_zYTU4_2wGaffZsu0x9S15sWSaKD8g5tilu14ZhL_qpWYJ60AMFzXLEtlVL-Hox3AFY_-GHAddQOoX179ZW3g2UfqUV10ismoGY0fnJvgVYSvrMHxBwiTkGeV6uf1yBwXHbJ0EnScchdZStmsHZSqK9nAttYJcaGBhItiUwOBzwHBHPD0MYtT6JHejgdUR4NqOQdO8YmQ-8nO6H8sO3Gd9z9eEQ3U2tOgN0OK1x6YL0ebKQrFCDde2-is7j17KYRDW0dwpYL_9kEtYlLYFrk-5MfHuVsZGbiSRIKvSFhMjR3mK_Qo4WksC5wwWMQrfredZ7csGlAZhSFAOSvEkD-ps4eSHC04ziY_POqlm3S1iGbhOmRtcjbu4Adq5NctNkPN9OK7CiVB-K773htNQ6OsvragA8Uh04-x4EEaXaCCTIJJ7zEZ_lCFxTrAR3CFKfQf1VTaJu8XUmIieLSCPzgq4mAdaUxJrc1f-g-ENjmMswul_FudkNk05aWHhawdF6-sxgcp3fGeGqp6wfFUkez1eg132-QtOt7zPEtIBMfUWqiwdeXYlW_iAIAmR8JwGlVzovFKw46kukeF42lam0V0LAcX1b2eJKiwpauOtwvQU7IEeq0m25VVyuTbZ27ydTBR4PvecBDOiSws5uZlnQecWMqwG72b6XBQ0BFgIcO2tzEpqJ1kMClKGnsa09_FwJu8bOCVLQtvX4yKkNY6RuCgD3wswoA22SHAhhTI5G0hY74caIYYKvhq7RCIOuBtUxIV5wA4uONC_DiPD0gb0B_IH_JiXRm636GjQxfRmKYLMqxoq__yg2iCY2UltB4_VN_i205bewJQnplPnj5RpY1mfkhl2zijiyJbePwQzeCG2wQTzBsPxqEBwkepqFi19WvnSZty2qAyn4VA_noAxIBkmoPqBGtgjQS0nUlj-wCYm-sdJT-xSMpUspQJv7_VNf08z0E-teQE1ARxa6tIyLufDGEjYXRAA-uuTkmZ1Aio161_4aVZ0Cwbz6KbLxKf3TH1zLoSN1cP_6mJYC9RisveEkZmKL71krpmQ7335x9OHMityMCs6zmEL__TWS-k5gvtZKwyR9J5nhPRrhm9ChAHMrxd014qWzK1Vy0ylismo0fBpsWs5CruZSZEJd19D7aAsSQQUEDu6tnDpQ11WwESVy_QhK5dEM2Ue-R_CIAysL2WI2AMNQzqAJNwyD5Y17F-Fad44oTPLUP4bE0lci-jqrQ9UJ3V0RiWd124zFrlWflXnW3Tg2Hb8wZEWqLvQEwz-4nb0fNUXk6TkEue-jD1vfGSSskCkFgWhkD3hXJTtCWUaV4E8CN9QR1gTBreJCasiz-PhbVupJybWOMzjSXIuCo3XHwF3iXP5bO2IYDWJ_q8IBT0WaRY2aTPg_AwiEiQUYM1CDAdViItf-2eIQQt4RtbqHQbWqLSYFySfhwUsnYoiM6EQqQDu7Bm_c1fXb8GUIAjb4jnYGO5jlcfXQG16ayLMTVYYODoNrDy8hb-rz-Yjr1J_VTTJVm9I1eNjTi9qOjXMSmP7fWCO5rjEoKblF1zKdsvu1-cxEBukYBQS7H-LJDyBDZmt4rPl8-W5LY7WOwjdzVVnTgtoNq-YkXOJw9t44QRzIM58il5oeTP8QWsZNUaFlxVc6xG7w8k4CeJI946EVV65-qK-0cquWS6wp0N3mJIoETIcO7otpRBd-e2acPGIK3CPZoQoG-DRtJaaE2fJgt3kvqN-EQnzmoYVugxWaDK4lS7H2Iv7n2w42riMSf74lLy334_lNe__COL6BcLV6Ukc6AqsOXZlZ7E7e1mmI9WUQvuDFjUxrhFuItK83DNqfxrC-M0-FJxFOB5HfoiZ9FulYUk9Je2Wl3NTJRxNnrS3p6h9dcRTixg7IPCapAi8k1A3d25--e6jWdrolfoC1tA-p1-h94JwpmzawpFOys4lsc-i93VzJywMtht7oZeWyZeAHlwEVNrjQQL73CnKdBDABV3YXO2kzVXhnjiksYPM8KJhwUpf8PM1f6iFMCKczRCnKxPX2b7nRazAzHmXuI5ugTbDjnHnKBbZd8qPiRQdsNG8x8oaQdkvFfcq1dzrVhdzJRY6ZzsXXp46Fd4Xw0djGHl8z46S9zjkboNfg-j5o4Nv8ClGtOUb8kbtIvsq8zcYmEVmVMXkqGENh_coUI8IbUCTDZVDGWLq-sUzpZLFUS4D-ZFokuDD5Tp4by3sS531aVDr64MllwXVTFQs71AK6rqyvmfQQWs5iH7nk6vKO0ml-KSbibaxTm6AX7sGQXzeewdwDsbKVOXCSvkNqTv4rC6dP7RLcnXuwzej_pI6nVCqXGvYgcNq08Jd8nuGlR3wdJHhqp3AEEH_a1ZiQ2seIip5cYpwmgNs02caQX401P5y95kxbawcB3pvr6ypF_cpmNKkj5nv9aynnRqTSJ2EX4hMr4gsSlUovRyQSQS_PSrZ9Wf0Dq9qZwYElWJvgD_Zo5t3C7yg93L5Po9mjmJjBgcG2TCaDDWKck1EszVJ4yUstjGD95vVWlUQqOCOgtvMudfGlUHnu0nD7U-q3ERlHadCRlv5aKxRlvnOTBBkGiip0IJlapLxNaK2r9T4IdWemaYCxpK2BvrYblPj1NjnC4YLuLeQ17FFsFZZymgNypgoRjxFBG0F7351n1wh4Li40IsVe6-I9eOFc9v9trIW5V6SW0l_f5SvbZVq0xs7ezlypejZFDDWSdBPpZ1rn9S-7-QlhC9LRUOpOrZ1vmP81BooPV9FnUFUgb8lKP-OhQgPK4ubkfxG0CyMxhPrpe1weDkSbtoHBN_RqDhAUf5jcqXzJRhy1rV1E9Ah_Fd6lm0mdKY9nUqXh9TwspHVGmXjfqv610x24HPsOJ3zR3X6PG3KKb20NXBpuy7X3Kurf9r3AoiOEUG0A5eWex0O6wWVsQhRLpNT4sRDGDYGmgsntP70F4E9J0chAi-15wa9gqPMspss-YurBHImgBDyX41nhGEj030R-D76jH1gzDAajawEpIHtQgUHIYG5OQcf5i4qlSF_p9hUdKgVdV2zGdSYgfLSe5-DrFRoFMnQO7Kx8b_Gxzo-931p-nU-bez2s1tK1NMvRoRDN34daflXHhbW8Ku-6J4dwGftJVCX5GtrS3sUlgehxpUpQBLfU-Denp1A7i8zJm0mr7kUN0S9rF55Y9lKKJDtQ1q5bV9_qXkdcy4sDyyv3pg3b9CEmJwtUGB57lBJLcXqO_KBRZiMzkhIfy8qQGj8mc2Nj954jr3JdmIBmYu8juMH7Z_dSXFs8H3d1rJt2yHcCTPIml82tsLiSnqL4-HVim7trLf-hmefQz5eMmI1ifycUTftErUmW6M-vIIAD6xG3W3rRZqOSv33HbUn_IbzBbDxN18nCaLVGQD-73NwFlm1WIPMGVazpXyz5AB7XRa1MBV8ImClDX27HVj8_XJ-vedMUvt2lUBVL9bpt8ewsojUaCjolut0gJdUSdTUgS3AbuAN9-Pg_N1IUYktPflrrEiADQh_qyPkPD_OQxURygWGeCXW9gVuXeT2CMXcRgL5yl0B-0ELppFKzQ57JCkakDjR83ShOC75LmM0cMTcHR7MLm6GeL9kIwNiS8GvqAnnRIxvujMpTYfQTaUPvBOOS5I7E3I2jpiio1t74P05Se9dYrHyEFMJ_Adni6FHjZpDpcZVtrmEMjh_IBqj-pOq_hZ6huJczW4fwOqmv0Dq1Yg0fDmSVXgb-gEUMYeS5neBzMCadDrCmRqbpsCoytry7RzD53jGeqlhFc81L_SYoCZu_Eh_XHiPT6lUdB0JkPfEvV3YuKDCwbsL1u2v75iG80oWDzRqxPB7OiXF3Bb0HYql5IX9zQt0LhPx8d9cSQnvnRuPuiaDel2fEUGVEF86JG732aBHQoFWA7jtn0pkCUaNsNqtQX2A3jCCQvfM6zd98ThrUBx21zc90GoXYVlV7OHoDhZvDwNurBzRKVU-V_elRsN2BpwfMLXtt4PNbaggwsAywc3DhheroLV3i-bpDOeQ9-1jqb88cd5IH0QrFcNJNHKxTtBcvFowfl8rInTOg_QLc03fbfqez5gz57vm3mYEuT9neCWl1O5f9o4zllS6ZItBr5nH4HoN7MtYdiYEcAR5BJFj9F4JX8njiK6Ea4OgAhEnLxYhwL1yIfRk_6cVUZifBa7_Ej8JicsVo-nhw0IKiie2LIwVNrZOvO5pUvmz1LGQg-7rK_0Ck2e_aYk4chYB_bBWa5L6X-bMt6aHCD1PxXadMcB95ProNt9LF2hjbOWrjGLHOtHPMkMix6cy0iO_YcL0Z_WD7cZOaBWmpZOFnDEnliKnWiF_3lsyH0xz3IxJuLZ8YzXywVAJBmKZ9w0C4uozf63_rjI8XY4D5T7Ggc6uzGA9vOTIqUUijUdobP9cL2y16fY9xUp3hoLFrYQLX1U0vVFv1gIqKUhpIouvb-Sb57K3F0OtDxxwg_R7LJnT1KDboZ9tjjkniya-fawucQ326NGOM3TZIB5TD3r2CMG6HMerLt9sjQMV_hE8QnK2Gd9eYz6oeYE5yl4yq0rRyCxoVZywFvHBfOjE_INQHKxrDSTawXjqltZ-LAk1HdzZiAnG1TYiG5kAuw_8w-09gGvRwztI659mNmlye7kjK6Aji7Gj3UfQVfj9E5wxLR1qNqDtBEjqPMrCi6pyFvD3TijDEDcPqRwCUWIsVK0KTGyxBB2X-t9pcmcQdDf6jzjPN-Ql65X2Q5jymvBLWoxhJ27_hzMBpEz2wftitqJTAkPJRabLbZtKiYp9P6xcV5vru8zOD5_fj2gOVzvSXf_Fh_B6pvVKTQge4Uey9bqBI5NsjNJfLOalRzhlyJIqq2oKWBXet59UwCO3VBvGWSV13tjZcT44KL4HZKyduAt_TgwnR51ckH5XJzxHNxDm-Iu16jzd_LhnsJHqSrj_RWEeYCyRHWh4O5JMtRRscJalMbG7Fdzv6unCrtLHHci1Gg-Irui4OLNBkq8_IuCgD2nT2SIDPcI1w3vgxERVwS8Mt-2qjPHyGdEhzB9RBUYezfZXf3wTgWHt_dIAXGhH1H8qmJwX2Uq1KJF1BZn5qVA_eNcDhDHHMQFp_OtXE6ChiWpxP8JZPDinFMJ5xDe3E3JM2T0sFd-SUdwFjx_7Wpj8k7d6hPvPBDlAV5mXMZsuIJxkfCNqcww9wnGZGsnKNlLbNu-vsBil9PJsi8dfcqwAahvzh3h9N_VTi1j9vrAgnOvIMT-dUNvsPU5tJQZkmO2y0aWAv-6i2n_sxTLWHezunKwPfPifo7vh4PxZV15-XTlbx9TZ5zyFSUNxeZBrPx5B4l1480C7OZEmnep4Odj0z3WRJIw3ye1Nupy40fqW_Vc6a8Nszj7QeZPTz9wDtyj7jT8CipKJd21D_y4fRjOMvfc-VsYLSRb3pDoFMxAvdqtgc7RNf1B_vZ28H7BaVyFTvEZtpij2cGhTDQdVH4NOWHA2YHuq43382_Rm_Ygc4mT2ZphC5zWHtsbUIysipkcsFPLmw2E-yPrV0YtNp_llayNq8aw-EULJcu0kZBu5paYywppwZ_iq7NvWn7Gp30ZSwzUADKoMOq4XmSkZkp7k7kGEdGAe9R3sskroZrfhTX-vgucTBn4WAv06cnfDr3N9FM77CGtLG0ukKncOV9BzXEJhTuF49my5IPFqgRyXbzJCnM3IAcxCeJ_-ZoQzatppzNQtd3UOOaAxgTwRMWIxOtBnVf6pmyAOdo4lpS-tCZd-5rW3JFr8n9gF1h5n7eZ20stuUf3s88xwCqrEcfzcLXkA3L2quhsdlOiddWqaUq_28ZjugnFhOK0G6-JNiri6CfUau7Sp6Jr5V5nyqtgJcOSpOB67fm2eg0MnJTqqy4VT","expiresIn":"3600","isNewUser":false}
INFO     root:conftest.py:176 Test 'auth_token' SUCCESS.
INFO     root:conftest.py:177 === Ending auth_token Test ===
INFO     root:conftest.py:165 === Starting test_get_licenses Test ===
INFO     root:conftest.py:166 API Response: 500 | {"ErrorCode":null,"ErrorDescription":null,"ErrorDetail":null,"Url":"http://api.dev.nerdunited.net/api/licenses/","type":null,"title":"A problem occurred processing your request","status":null,"detail":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding \u0027EnableRetryOnFailure\u0027 to the \u0027UseSqlServer\u0027 call.\n ---\u003E Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \u0022Licenses\u0022 requested by the login. The login failed.\nLogin failed for user \u0027svc_Licenses\u0027.\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal\u0026 connection)\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource\u00601 retry, DbConnectionOptions userOptions, DbConnectionInternal\u0026 connection)\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource\u00601 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal\u0026 connection)\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource\u00601 retry, DbConnectionOptions userOptions)\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource\u00601 retry, SqlConnectionOverrides overrides)\n   at Microsoft.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)\n--- End of stack trace from previous location ---\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable\u00601.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func\u00604 operation, Func\u00604 verifySucceeded, CancellationToken cancellationToken)\nClientConnectionId:a260950c-2184-429a-aa02-f208cc5c364e\nError Number:4060,State:1,Class:11\n   --- End of inner exception stack trace ---\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func\u00604 operation, Func\u00604 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable\u00601.AsyncEnumerator.MoveNextAsync()\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable\u00601 source, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable\u00601 source, CancellationToken cancellationToken)\n   at Nerd.Licenses.Infrastructure.Data.LicenseRepository.GetMemberLicensesAsync(Int32 memberid, CancellationToken cancellationToken) in /src/Nerd.Licenses/Nerd.Licenses.Infrastructure/Data/LicenseRepository.cs:line 70\n   at Nerd.Licenses.Core.Services.LicenseService.GetMemberLicensesAsync(Int32 memberId, CancellationToken cancellationToken) in /src/Nerd.Licenses/Nerd.Licenses.Core/Services/LicenseService.cs:line 38\n   at Nerd.Licenses.Api.Controllers.V1.LicensesController.Get(CancellationToken cancellationToken) in /src/Nerd.Licenses/Nerd.Licenses.Api/Controllers/V1/LicensesController.cs:line 41\n   at lambda_method93(Closure , Object )\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.\u003CInvokeActionMethodAsync\u003Eg__Awaited|12_0(ControllerActionInvoker invoker, ValueTask\u00601 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.\u003CInvokeNextActionFilterAsync\u003Eg__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State\u0026 next, Scope\u0026 scope, Object\u0026 state, Boolean\u0026 isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\n--- End of stack trace from previous location ---\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.\u003CInvokeFilterPipelineAsync\u003Eg__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.\u003CInvokeAsync\u003Eg__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.\u003CInvokeAsync\u003Eg__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.\u003CInvoke\u003Eg__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\n   at Nerd.Common.Logging.NerdApiGlobalLogScopeMiddleware.InvokeAsync(HttpContext httpContext) in /src/Nerd.Common/Logging/NerdApiGlobalLogScopeMiddleware.cs:line 41\n   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.\u003CInvoke\u003Eg__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)","instance":null}
INFO     root:conftest.py:172 Test 'test_get_licenses' FAILED.
ERROR    root:conftest.py:173 API response status code: 500
assert 500 in [200, 201, 202, 203, 204, 205]
 +  where 500 = <Response [500]>.status_code
Traceback (most recent call last):
  File "/home/runner/work/qa-nerd-core-backend/qa-nerd-core-backend/conftest.py", line 170, in api_response_conditions
    assert response.status_code in allowed_status_codes, f"API response status code: {response.status_code}"
AssertionError: API response status code: 500
assert 500 in [200, 201, 202, 203, 204, 205]
 +  where 500 = <Response [500]>.status_code