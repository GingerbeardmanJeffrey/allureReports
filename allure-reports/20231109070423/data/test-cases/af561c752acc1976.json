{
  "uid" : "af561c752acc1976",
  "name" : "test_create_user_step1",
  "fullName" : "tests.test_new_user_flow#test_create_user_step1",
  "historyId" : "d4ee9e9df04ee50f72bda4fab3138130",
  "time" : {
    "start" : 1699513486861,
    "stop" : 1699513487064,
    "duration" : 203
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: API response status code: 401\nassert 401 in [200, 201, 202, 203, 204, 205]\n +  where 401 = <Response [401]>.status_code",
  "statusTrace" : "random_email = 'nerdcore_qateam+tempZdVaxKuc@nerdunited.com'\nconfig = <module 'config' from '/home/runner/work/qa-nerd-core-backend/qa-nerd-core-backend/config.py'>\n\n    def test_create_user_step1(random_email, config):\n        global token\n        global email\n        url = f\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key={config.FIREBASE_KEY}\"\n        data = {\"email\": random_email, \"password\": config.PASSWORD}\n        response = requests.post(url=url, json=data)\n>       api_response_conditions(response)\n\ntests/test_new_user_flow.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, test_name = 'test_create_user_step1'\n\n    def api_response_conditions(response, test_name=None):\n        if test_name is None:\n            caller_frame = inspect.currentframe().f_back\n            test_name = caller_frame.f_code.co_name\n        logging.info(f\"=== Starting {test_name} Test ===\")\n        logging.info(f\"API Response: {response.status_code} | {response.text}\")\n        allowed_status_codes = [200, 201, 202, 203, 204, 205]\n    \n        try:\n>           assert response.status_code in allowed_status_codes, f\"API response status code: {response.status_code}\"\nE           AssertionError: API response status code: 401\nE           assert 401 in [200, 201, 202, 203, 204, 205]\nE            +  where 401 = <Response [401]>.status_code\n\nconftest.py:189: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "config",
    "time" : {
      "start" : 1699513486860,
      "stop" : 1699513486860,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1699513486860,
      "stop" : 1699513486860,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "random_email",
    "time" : {
      "start" : 1699513486860,
      "stop" : 1699513486860,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: API response status code: 401\nassert 401 in [200, 201, 202, 203, 204, 205]\n +  where 401 = <Response [401]>.status_code",
    "statusTrace" : "random_email = 'nerdcore_qateam+tempZdVaxKuc@nerdunited.com'\nconfig = <module 'config' from '/home/runner/work/qa-nerd-core-backend/qa-nerd-core-backend/config.py'>\n\n    def test_create_user_step1(random_email, config):\n        global token\n        global email\n        url = f\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key={config.FIREBASE_KEY}\"\n        data = {\"email\": random_email, \"password\": config.PASSWORD}\n        response = requests.post(url=url, json=data)\n>       api_response_conditions(response)\n\ntests/test_new_user_flow.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, test_name = 'test_create_user_step1'\n\n    def api_response_conditions(response, test_name=None):\n        if test_name is None:\n            caller_frame = inspect.currentframe().f_back\n            test_name = caller_frame.f_code.co_name\n        logging.info(f\"=== Starting {test_name} Test ===\")\n        logging.info(f\"API Response: {response.status_code} | {response.text}\")\n        allowed_status_codes = [200, 201, 202, 203, 204, 205]\n    \n        try:\n>           assert response.status_code in allowed_status_codes, f\"API response status code: {response.status_code}\"\nE           AssertionError: API response status code: 401\nE           assert 401 in [200, 201, 202, 203, 204, 205]\nE            +  where 401 = <Response [401]>.status_code\n\nconftest.py:189: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "84061b01f5fa5216",
      "name" : "log",
      "source" : "84061b01f5fa5216.txt",
      "type" : "text/plain",
      "size" : 1026
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_new_user_flow"
  }, {
    "name" : "host",
    "value" : "fv-az455-587"
  }, {
    "name" : "thread",
    "value" : "1899-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_new_user_flow"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "af561c752acc1976.json",
  "parameterValues" : [ ]
}